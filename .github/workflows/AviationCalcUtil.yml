name: Tagged Release

on:
  push:
    tags: [ "v*" ]

env:
  CONAN_HOME: "${{ github.workspace }}/conan/"
  CONAN_VERBOSE_TRACEBACK: 1

jobs:
  build:
    # Arch Matrix
    strategy:
      fail-fast: false
      matrix:
        #arch: [x64, x86, arm, arm64]
        arch: [x64, x86]
        os: [macos-latest, windows-latest, ubuntu-latest]
        configuration: [Debug, Release]
        include:
          - arch: x64
            conan-arch: x86_64
          - arch: x86
            conan-arch: x86
          #- arch: arm
          #  conan-arch: armv4
          #- arch: arm64
          #  conan-arch: armv7
          - os: macos-latest
            short-os: osx
          - os: windows-latest
            short-os: win
          - os: ubuntu-latest
            short-os: linux
          - os: windows-latest
            arch: x86
            cmake-win-flag: ' -DCMAKE_POLICY_DEFAULT_CMP0091="NEW" -A Win32'
          - os: windows-latest
            arch: x64
            cmake-win-flag: ' -DCMAKE_POLICY_DEFAULT_CMP0091="NEW" -A x64'
        exclude:
          #- os: windows-latest
          #  arch: arm
          #- os: windows-latest
          #  arch: arm64
          - os: ubuntu-latest
            arch: x86
          - os: macos-latest
            arch: x86
          #- os: macos-latest
          #  arch: arm
          #- os: macos-latest
          #  arch: arm64

    uses: ./.github/workflows/BuildCMakeReusable.yml
    with:
      arch: ${{ matrix.arch }}
      conan-arch: ${{ matrix.conan-arch }}
      os: ${{ matrix.os }}
      short-os: ${{ matrix.short-os }}
      cmake-win-flag: ${{ matrix.cmake-win-flag }}
      configuration: ${{ matrix.configuration }}
      create-nuget-package: ${{ matrix.configuration == 'Release' }}
      copy-nuget-defs: ${{ matrix.short-os == 'win' && matrix.arch == 'x64' }}
  upload-nuget-package:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')}}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: 'latest'
      - name: Download NuGet Packages Contents
        uses: actions/download-artifact@v3
        with:
          name: AviationCalcUtil-NuGet
          path: ${{ github.workspace }}/nuget
      - name: Create NuGet Package
        run: |
          cd ${{ github.workspace }}/nuget
          nuget pack .
      - name: Upload NuGet Package
        run: |
          cd ${{ github.workspace }}/nuget
          nuget push *.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
  create-github-release:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')}}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Binary Tars
        uses: actions/download-artifact@v3
        with:
          name: AviationCalcUtil-bins
          path: ${{ github.workspace }}/bins
      - uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ${{ github.workspace}}/bins/*.tar.gz